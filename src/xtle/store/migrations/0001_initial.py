# Generated by Django 3.0.3 on 2020-02-18 19:09

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import translate.storage.base
import xtle.core.mixins.treeitem
import xtle.core.user
import xtle.store.fields
import xtle.store.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('xtle_tp', '0001_initial'),
        ('xtle_app', '0002_auto_20200218_1909'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('xtle_format', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_template', models.BooleanField(default=False)),
                ('xtle_path', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Path')),
                ('tp_path', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Path')),
                ('name', models.CharField(editable=False, max_length=128, validators=[xtle.store.validators.validate_no_slashes])),
                ('file_mtime', models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0, tzinfo=utc))),
                ('state', models.IntegerField(db_index=True, default=0, editable=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('last_sync_revision', models.IntegerField(blank=True, db_index=True, null=True)),
                ('obsolete', models.BooleanField(default=False)),
                ('priority', models.FloatField(db_index=True, default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('filetype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stores', to='xtle_format.Format')),
                ('parent', models.ForeignKey(db_index=False, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='child_stores', to='xtle_app.Directory')),
                ('translation_project', models.ForeignKey(db_index=False, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='stores', to='xtle_tp.TranslationProject')),
            ],
            options={
                'db_table': 'xtle_store_store',
                'ordering': ['xtle_path'],
                'abstract': False,
                'base_manager_name': 'objects',
                'unique_together': {('obsolete', 'translation_project', 'tp_path'), ('parent', 'name')},
                'index_together': {('translation_project', 'is_template'), ('translation_project', 'xtle_path', 'is_template', 'filetype')},
            },
            bases=(models.Model, xtle.core.mixins.treeitem.CachedTreeItem, translate.storage.base.TranslationStore),
        ),
        migrations.CreateModel(
            name='SuggestionState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=16)),
            ],
            options={
                'db_table': 'xtle_store_suggestion_state',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(db_index=True)),
                ('unitid', models.TextField(editable=False)),
                ('unitid_hash', models.CharField(db_index=True, editable=False, max_length=32)),
                ('source_f', xtle.store.fields.MultiStringField(null=True)),
                ('target_f', xtle.store.fields.MultiStringField(blank=True, null=True)),
                ('target_wordcount', models.SmallIntegerField(default=0, editable=False)),
                ('target_length', models.SmallIntegerField(db_index=True, default=0, editable=False)),
                ('developer_comment', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(4096)])),
                ('translator_comment', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(4096)])),
                ('locations', models.TextField(editable=False, null=True, validators=[django.core.validators.MaxLengthValidator(4096)])),
                ('context', models.TextField(editable=False, null=True, validators=[django.core.validators.MaxLengthValidator(4096)])),
                ('state', models.IntegerField(db_index=True, default=0)),
                ('revision', models.IntegerField(blank=True, db_index=True, default=0)),
                ('creation_time', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('mtime', models.DateTimeField(auto_now=True, db_index=True)),
                ('store', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='xtle_store.Store')),
            ],
            options={
                'db_table': 'xtle_store_unit',
                'get_latest_by': 'mtime',
                'abstract': False,
                'unique_together': {('store', 'state', 'index', 'unitid_hash'), ('store', 'unitid_hash')},
                'index_together': {('store', 'revision'), ('store', 'mtime'), ('store', 'index')},
            },
            bases=(models.Model, translate.storage.base.TranslationUnit),
        ),
        migrations.CreateModel(
            name='UnitSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_with', models.IntegerField(db_index=True, default=5)),
                ('creation_revision', models.IntegerField(blank=True, db_index=True, default=0)),
                ('source_hash', models.CharField(editable=False, max_length=32, null=True)),
                ('source_wordcount', models.SmallIntegerField(default=0, editable=False)),
                ('source_length', models.SmallIntegerField(default=0, editable=False)),
                ('created_by', models.ForeignKey(default=xtle.core.user.get_system_user_id, on_delete=models.SET(xtle.core.user.get_system_user), related_name='created_units', to=settings.AUTH_USER_MODEL)),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='unit_source', to='xtle_store.Unit')),
            ],
            options={
                'db_table': 'xtle_store_unit_source',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_with', models.IntegerField(db_index=True)),
                ('submitted_on', models.DateTimeField(db_index=True, null=True)),
                ('commented_on', models.DateTimeField(db_index=True, null=True)),
                ('reviewed_on', models.DateTimeField(db_index=True, null=True)),
                ('commented_by', models.ForeignKey(null=True, on_delete=models.SET(xtle.core.user.get_system_user), related_name='commented', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(null=True, on_delete=models.SET(xtle.core.user.get_system_user), related_name='reviewed', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(null=True, on_delete=models.SET(xtle.core.user.get_system_user), related_name='submitted', to=settings.AUTH_USER_MODEL)),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='change', to='xtle_store.Unit')),
            ],
            options={
                'db_table': 'xtle_store_unit_change',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_f', xtle.store.fields.MultiStringField()),
                ('target_hash', models.CharField(db_index=True, max_length=32)),
                ('creation_time', models.DateTimeField(db_index=True, null=True)),
                ('review_time', models.DateTimeField(db_index=True, null=True)),
                ('reviewer', models.ForeignKey(null=True, on_delete=models.SET(xtle.core.user.get_system_user), related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suggestions', to='xtle_store.SuggestionState')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xtle_store.Unit')),
                ('user', models.ForeignKey(on_delete=models.SET(xtle.core.user.get_system_user), related_name='suggestions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'xtle_store_suggestion',
                'abstract': False,
            },
            bases=(models.Model, translate.storage.base.TranslationUnit),
        ),
        migrations.CreateModel(
            name='QualityCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64)),
                ('category', models.IntegerField(default=0)),
                ('message', models.TextField(validators=[django.core.validators.MaxLengthValidator(4096)])),
                ('false_positive', models.BooleanField(db_index=True, default=False)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xtle_store.Unit')),
            ],
            options={
                'db_table': 'xtle_store_qualitycheck',
                'abstract': False,
            },
        ),
    ]
